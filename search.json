[{"path":"https://serotracker.github.io/serotrackr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 serotrackr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://serotracker.github.io/serotrackr/articles/serotrackr.html","id":"map-your-coloumns","dir":"Articles","previous_headings":"","what":"1) Map your coloumns","title":"serotrackr","text":"Among columns raw data, specify SeroTracker requires using map_cols() function:","code":"df <- map_cols(   sample_raw_data,   dataset_id = dataset_id,   id = id,   age_group = age,   sex = sex,   country = \"Canada\",   state = state,   city = city,   collection_start_date = collection_start_date,   collection_end_date = collection_end_date,   test_id = assays$`SARS-CoV-2`$`EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG`,   result = result,   result_cat = result_cat,   include_others = FALSE )"},{"path":"https://serotracker.github.io/serotrackr/articles/serotrackr.html","id":"clean-data","dir":"Articles","previous_headings":"","what":"2) Clean data","title":"serotrackr","text":"clean() function apply required validations data:","code":"df_cleaned <- clean(df) df_cleaned #> # A tibble: 3 × 13 #>   dataset_id    id age_group sex    country state   county city            #>        <dbl> <int> <chr>     <chr>  <chr>   <chr>   <lgl>  <chr>           #> 1          1     1 0-10      female Canada  Alberta NA     calgary         #> 2          1     2 20-30     male   Canada  bc      NA     Metro vancouver #> 3          1     3 30-40     other  Canada  Québec  NA     Montréal        #> # ℹ 5 more variables: collection_start_date <date>, collection_end_date <date>, #> #   test_id <chr>, result <dbl>, result_cat <chr>"},{"path":"https://serotracker.github.io/serotrackr/articles/serotrackr.html","id":"generate-aggregate-estimates","dir":"Articles","previous_headings":"","what":"3) Generate aggregate estimates","title":"serotrackr","text":"completed.","code":""},{"path":"https://serotracker.github.io/serotrackr/articles/serotrackr.html","id":"adjust-the-estimates","dir":"Articles","previous_headings":"","what":"4) Adjust the estimates","title":"serotrackr","text":"completed.","code":""},{"path":"https://serotracker.github.io/serotrackr/articles/serotrackr.html","id":"calculate-95-cis","dir":"Articles","previous_headings":"","what":"5) Calculate 95% CIs","title":"serotrackr","text":"completed.","code":""},{"path":"https://serotracker.github.io/serotrackr/articles/serotrackr.html","id":"export-to-excel-for-submission","dir":"Articles","previous_headings":"","what":"6) Export to Excel for submission","title":"serotrackr","text":"save_xlsx() function exports clean data Excel format. fields, mostly metadata, exported document still need filled . first sheet document necessary instructions. done, document ready submitted SeroTracker.com.","code":"save_xlsx(df_cleaned, path = tempfile())"},{"path":"https://serotracker.github.io/serotrackr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Placeholder. Maintainer.","code":""},{"path":"https://serotracker.github.io/serotrackr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Placeholder (2023). serotrackr: Facilitates Submissions SeroTracker. R package version 0.1.0, https://serotracker.github.io/serotrackr/.","code":"@Manual{,   title = {serotrackr: Facilitates Submissions to SeroTracker},   author = {{Placeholder}},   year = {2023},   note = {R package version 0.1.0},   url = {https://serotracker.github.io/serotrackr/}, }"},{"path":"https://serotracker.github.io/serotrackr/index.html","id":"serotrackr-","dir":"","previous_headings":"","what":"Facilitates Submissions to SeroTracker","title":"Facilitates Submissions to SeroTracker","text":"goal serotrackr facilitate submissions SeroTracker 2.0 website. Access package website vignettes . updated new features added.","code":""},{"path":"https://serotracker.github.io/serotrackr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Facilitates Submissions to SeroTracker","text":"can install development version serotrackr like : PS: logo subject change.","code":"devtools::install_github(\"serotracker/serotrackr\")"},{"path":"https://serotracker.github.io/serotrackr/reference/assays.html","id":null,"dir":"Reference","previous_headings":"","what":"Assays list — assays","title":"Assays list — assays","text":"list assays different pathogens. list can used map_cols() function select assays.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assays list — assays","text":"","code":"assays"},{"path":"https://serotracker.github.io/serotrackr/reference/assays.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Assays list — assays","text":"assays nested named list","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assays.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Assays list — assays","text":"Based list assays gathered SeroTracker SARS-CoV-2","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assays list — assays","text":"","code":"assays$`SARS-CoV-2`$`EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG` #> [1] \"EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG\""},{"path":"https://serotracker.github.io/serotrackr/reference/assays_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Assays data — assays_df","title":"Assays data — assays_df","text":"Assay data different pathogens.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assays_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assays data — assays_df","text":"","code":"assays_df"},{"path":"https://serotracker.github.io/serotrackr/reference/assays_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Assays data — assays_df","text":"assays_df data frame 309 rows 16 columns: pathogen Pathogen; currently SARS-CoV-2 available test_id Unique descriptive ID test test_name Test name isotype Isotype test_type Test type antibody_target Antibody target rdt_test RDT test: boolean variable manufacturer Manufacturer multiplex_detection Multiplex detection: boolean variable spike_antibody_target Spike antibody target manufacturer_sensitivity Manufacturer sensitivity manufacturer_specificity Manufacturer specificity unique_identifier Unique identifier info_page_url Info page URL quantitative_qualitative Quantitative /qualitative who_doherty_find_verified Doherty find verified","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assays_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Assays data — assays_df","text":"Based list assays gathered SeroTracker SARS-CoV-2","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean the data — clean","title":"Clean the data — clean","text":"Cleans validates main columns used submission serotracker platform","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean the data — clean","text":"","code":"clean(data)"},{"path":"https://serotracker.github.io/serotrackr/reference/clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean the data — clean","text":"data data.frame","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean the data — clean","text":"cleaned data.frame","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean the data — clean","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(stringr) df_orig <- data.frame(dataset_id = 1,                       id = 1:3,                       age = c(\"0 - 10\", \"20-30\", \"30,40\"),                       sex = c(\"f\", \"Male\", \"binary\"),                       collection_start_date = \"2020-03-01\",                       collection_end_date = \"2020-04-01\",                       result = c(\"'2.4'\", \"3.5\", \"9\"),                       result_cat = rep(\"negative\", times = 3))  mapped_cols <- map_cols(   df_orig,   dataset_id = dataset_id,   id = id,   age_group = age,   sex = sex,   country = \"Earth!\",   collection_start_date = collection_start_date,   collection_end_date = collection_end_date,   test_id = assays$`SARS-CoV-2`$`EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG`,   result = result,   result_cat = result_cat,   include_others = FALSE )  clean(mapped_cols) #>   dataset_id id age_group    sex country state county city #> 1          1  1      0-10 female  Earth!    NA     NA   NA #> 2          1  2     20-30   male  Earth!    NA     NA   NA #> 3          1  3     30-40  other  Earth!    NA     NA   NA #>   collection_start_date collection_end_date #> 1            2020-03-01          2020-04-01 #> 2            2020-03-01          2020-04-01 #> 3            2020-03-01          2020-04-01 #>                                       test_id result result_cat #> 1 EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG    2.4   negative #> 2 EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG    3.5   negative #> 3 EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG    9.0   negative"},{"path":"https://serotracker.github.io/serotrackr/reference/map_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Map columns of data — map_cols","title":"Map columns of data — map_cols","text":"Maps required columns data validates .","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/map_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map columns of data — map_cols","text":"","code":"map_cols(   data,   dataset_id = NULL,   id = NULL,   age_group,   sex,   country,   state = NULL,   county = NULL,   city = NULL,   collection_start_date,   collection_end_date,   test_id,   result,   result_cat,   include_others = FALSE )"},{"path":"https://serotracker.github.io/serotrackr/reference/map_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map columns of data — map_cols","text":"data data.frame dataset_id column, data collection event id column IDs age_group column containing age min age max age group sex column sex country string, name country state column state county column county city column city collection_start_date column sampling start date collection_end_date column sampling end date test_id add list test later result column test results result_cat column values \"positive\", \"negative\", \"borderline\" include_others include additional columns ","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/map_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map columns of data — map_cols","text":"cleaned data.frame","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/map_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map columns of data — map_cols","text":"","code":"library(dplyr) library(stringr) df_orig <- data.frame(dataset_id = 1,                       id = 1:3,                       age = c(\"0 - 10\", \"20-30\", \"30,40\"),                       sex = c(\"f\", \"Male\", \"binary\"),                       collection_start_date = \"2020-03-01\",                       collection_end_date = \"2020-04-01\",                       result = c(\"'2.4'\", \"3.5\", \"9\"),                       result_cat = rep(\"negative\", times = 3))  map_cols(df_orig,          dataset_id = dataset_id,          id = id,          age_group = age,          sex = sex,          country = \"Earth!\",          collection_start_date = collection_start_date,          collection_end_date = collection_end_date,          test_id = assays$`SARS-CoV-2`$`EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG`,          result = result,          result_cat = result_cat,          include_others = FALSE) #>   dataset_id id age_group    sex country state county city #> 1          1  1    0 - 10      f  Earth!    NA     NA   NA #> 2          1  2     20-30   Male  Earth!    NA     NA   NA #> 3          1  3     30,40 binary  Earth!    NA     NA   NA #>   collection_start_date collection_end_date #> 1            2020-03-01          2020-04-01 #> 2            2020-03-01          2020-04-01 #> 3            2020-03-01          2020-04-01 #>                                       test_id result result_cat #> 1 EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG  '2.4'   negative #> 2 EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG    3.5   negative #> 3 EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG      9   negative"},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Regions list — regions","title":"Regions list — regions","text":"nested named list regions three administrative (ADM) levels. list can used adm1() adm2() functions rename geographic areas based SeroTracker's predefined list region names. help automate generation visualizations analyses.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regions list — regions","text":"","code":"regions"},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regions list — regions","text":"regions list. element list returns unique ID.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regions list — regions","text":"Based CGAZ dataset geoBoundaries: https://github.com/wmgeolab/geoBoundaries/tree/main/releaseData/CGAZ","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regions list — regions","text":"adm0: Use level select study's country. adm1: Use level select study's state/province. adm2: Use level select study's district/municipality equivalent division.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regions list — regions","text":"","code":"regions$adm2$Canada$Alberta$Calgary #> [1] \"76498100B36899265297983\""},{"path":"https://serotracker.github.io/serotrackr/reference/regions_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Regions data — regions_df","title":"Regions data — regions_df","text":"Regions data three administrative levels","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regions data — regions_df","text":"","code":"regions_df"},{"path":"https://serotracker.github.io/serotrackr/reference/regions_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regions data — regions_df","text":"regions_df data frame 53087 rows 6 columns: shapeGroup ISO 3166 code country shapeType Aministrative (ADM) level region. ADM0: country; ADM1: state/province; ADM2: district/municipality/equivalent NAME_0 Country name region NAME_1 State/province name region NAME_2 District/municipality/ equivalent name region shapeID_v5 Unique ID region administartive level","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regions data — regions_df","text":"Based CGAZ dataset geoBoundaries: https://github.com/wmgeolab/geoBoundaries/tree/main/releaseData/CGAZ","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/sample_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample raw data — sample_raw_data","title":"Sample raw data — sample_raw_data","text":"Example dataset showcase package's expectations raw dataset package's workflow make raw data ready submission SeroTracker 2.0.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/sample_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample raw data — sample_raw_data","text":"","code":"sample_raw_data"},{"path":"https://serotracker.github.io/serotrackr/reference/sample_raw_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample raw data — sample_raw_data","text":"sample_raw_data data frame 3 rows 10 columns: dataset_id ID collection period id Anonimized ID participant sample age Age sex Sex state Administative level 1 region names city Administative level 2 region names collection_start_date Collection start date collection_end_date Collection end date result Test results result_cat Interpretation test results; e.g. positive, negative, borderline","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/sample_raw_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample raw data — sample_raw_data","text":"Fictitious data","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/save_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Save as xlsx — save_xlsx","title":"Save as xlsx — save_xlsx","text":"Save xlsx","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/save_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save as xlsx — save_xlsx","text":"","code":"save_xlsx(data, path)"},{"path":"https://serotracker.github.io/serotrackr/reference/save_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save as xlsx — save_xlsx","text":"data cleaned data.frame, output map_cols() path save xlsx file","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/save_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save as xlsx — save_xlsx","text":"Saves data.fram disk","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/save_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save as xlsx — save_xlsx","text":"","code":"library(dplyr) library(stringr) library(openxlsx)  df_orig <- data.frame(dataset_id = 1,                       id = 1:3,                       age = c(\"0 - 10\", \"20-30\", \"30,40\"),                       sex = c(\"f\", \"Male\", \"binary\"),                       collection_start_date = \"2020-03-01\",                       collection_end_date = \"2020-04-01\",                       result = c(\"'2.4'\", \"3.5\", \"9\"),                       result_cat = rep(\"negative\", times = 3))  df_out <- map_cols(   df_orig,   dataset_id = dataset_id,   id = id,   age_group = age,   sex = sex,   country = \"Earth!\",   collection_start_date = collection_start_date,   collection_end_date = collection_end_date,   test_id = assays$`SARS-CoV-2`$`EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG`,   result = result,   result_cat = result_cat,   include_others = FALSE ) %>% clean()  save_xlsx(df_out, path = tempdir())"},{"path":"https://serotracker.github.io/serotrackr/reference/serotrackr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"serotrackr: Facilitates Submissions to SeroTracker — serotrackr-package","title":"serotrackr: Facilitates Submissions to SeroTracker — serotrackr-package","text":"serotrackr package specifically developed help users prepare raw data submission SeroTracker platform. happens several steps represented one function ; 1) mapping columns raw data required submission, 2) cleaning raw data, 3) generating aggregate estimayes, 4) adjusting estimates, 5) exporting final data xlsx file remaining fields can filled user submission SeroTracker.com.","code":""},{"path":[]},{"path":"https://serotracker.github.io/serotrackr/news/index.html","id":"serotrackr-development-version","dir":"Changelog","previous_headings":"","what":"serotrackr (development version)","title":"serotrackr (development version)","text":"Added logo README.md file. used pkgdown website .","code":""},{"path":"https://serotracker.github.io/serotrackr/news/index.html","id":"serotrackr-010","dir":"Changelog","previous_headings":"","what":"serotrackr 0.1.0","title":"serotrackr 0.1.0","text":"Initial release Added map_cols() function mapping columns Added clean() function cleaning validating data Added save_xlsx() function exporting data standard Excel template Assays regions organized two nested named lists, users can take advantage RStudio search assays regions dropdown-like behaviour Added documention current functions data objects Added sample data showcase raw data expected package handles Added package lifecycle information","code":""}]
