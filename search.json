[{"path":"https://serotracker.github.io/serotrackr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 serotrackr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://serotracker.github.io/serotrackr/articles/serotrackr.html","id":"validate-your-data","dir":"Articles","previous_headings":"","what":"1) Validate your data","title":"serotrackr","text":"first step use st_validate(). , need specify columns data contains data required submission. Instead unquoted column names, can also provide vector length one arguments, applied records data validation. Please note reason see output uncolored several pieces output function styled organized cli package specific R console, expected use case serotrackr happens. ANSI escape codes cli uses fully supported Rmarkdown. st_validate() produces detailed report errors need addressed proceeding. now rerun st_validate(): Hooray! glimps validated data:","code":"validated_df <- st_validate(   sample_raw_data,   dataset_id = dataset_id,   id = id,   age_group = \"12-17\",   sex = \"m\",   adm0 = regions$adm0$Canada,   adm1 = regions$adm1$Canada$Alberta,   adm2 = regions$adm2$Canada$Alberta$Calgary,   collection_start_date = \"2023-01-01\",   collection_end_date = \"2022-02-01\",   test_id = assays$`SARS-CoV-2`$`AAZ LMB - IgG, IgM - COVID-PRESTO®`,   result = result,   result_cat = result_cat,   include_others = TRUE ) #> #> ── Mapping columns and validating data ───────────────────────────────────────── #> ℹ age_group ... #> ✔ age_group is a valid string. [281ms] #> ℹ sex ... #> ✔ sex is a valid string. [16ms] #> ℹ adm0 ... #> ✔ adm0 is a valid string. [115ms] #> ℹ adm1 ... #> ✔ adm1 is a valid string. [8ms] #> ℹ adm2 ... #> ✔ adm2 is a valid string. [50ms] #> ℹ collection_start_date ... #> ✔ collection_start_date is a valid scalar. [232ms] #> ℹ collection_end_date ... #> ✖ collection_end_date can't be before the start date. [41ms] #> ℹ test_id ... #> ✔ test_id is a valid string. [8ms] #> ℹ result ... #> ✔ result is a valid column. [23ms] #> ℹ result_cat ... #> ✖ result_cat must only be one of these values, ignoring case: `positive`, #>   `borderline`, or `negative`. 46 records have this issue. Invalid values are #>   \"neg\" and \"pos\". [25ms] #> ℹ dataset_id ... #> ✔ dataset_id is a valid column. [3ms] #> ℹ id ... #> ✖ id will be evaluated when `collection_start_date`, `collection_end_date`, #>   `test_id`, and `result` arguments are error-free. [3ms] #> #> ── Validation finished ───────────────────────────────────────────────────────── #> Error in `st_validate()`: #> ! 3 errors! Please address them first. Validated data not created. new_raw_data <- sample_raw_data %>%   mutate(     result_cat = case_when(       result_cat == \"neg\" ~ \"negative\",       result_cat == \"pos\" ~ \"positive\",       TRUE ~ result_cat     )   ) validated_df <- st_validate(   new_raw_data,   dataset_id = dataset_id,   id = id,   age_group = \"12-17\",   sex = \"m\",   adm0 = regions$adm0$Canada,   adm1 = regions$adm1$Canada$Alberta,   adm2 = regions$adm2$Canada$Alberta$Calgary,   collection_start_date = \"2023-01-01\",   collection_end_date = \"2023-02-01\",   test_id = assays$`SARS-CoV-2`$`AAZ LMB - IgG, IgM - COVID-PRESTO®`,   result = result,   result_cat = result_cat,   include_others = TRUE ) #> #> ── Mapping columns and validating data ───────────────────────────────────────── #> ℹ age_group ... #> ✔ age_group is a valid string. [24ms] #> ℹ sex ... #> ✔ sex is a valid string. [8ms] #> ℹ adm0 ... #> ✔ adm0 is a valid string. [7ms] #> ℹ adm1 ... #> ✔ adm1 is a valid string. [8ms] #> ℹ adm2 ... #> ✔ adm2 is a valid string. [12ms] #> ℹ collection_start_date ... #> ✔ collection_start_date is a valid scalar. [9ms] #> ℹ collection_end_date ... #> ✔ collection_end_date is a valid scalar. [15ms] #> ℹ test_id ... #> ✔ test_id is a valid string. [5ms] #> ℹ result ... #> ✔ result is a valid column. [8ms] #> ℹ result_cat ... #> ✔ result_cat is a valid column. [8ms] #> ℹ dataset_id ... #> ✔ dataset_id is a valid column. [3ms] #> ℹ id ... #> ✔ id is a valid column. [10ms] #> #> ── Validation finished ───────────────────────────────────────────────────────── #> Success! Validated data created. #> head(validated_df) #> # A tibble: 6 × 12 #>   dataset_id    id age_group sex   adm1              adm2  collection_start_date #>        <dbl> <dbl> <chr>     <chr> <chr>             <chr> <date>                #> 1          1     1 12-17     Male  4576071B96817999… 7649… 2023-01-01            #> 2          1     2 12-17     Male  4576071B96817999… 7649… 2023-01-01            #> 3          1     3 12-17     Male  4576071B96817999… 7649… 2023-01-01            #> 4          1    28 12-17     Male  4576071B96817999… 7649… 2023-01-01            #> 5          2    33 12-17     Male  4576071B96817999… 7649… 2023-01-01            #> 6          2    65 12-17     Male  4576071B96817999… 7649… 2023-01-01            #> # ℹ 5 more variables: collection_end_date <date>, test_id <chr>, result <dbl>, #> #   result_cat <chr>, another_col <chr>"},{"path":"https://serotracker.github.io/serotrackr/articles/serotrackr.html","id":"generate-aggregate-estimates","dir":"Articles","previous_headings":"","what":"2) Generate aggregate estimates","title":"serotrackr","text":"completed.","code":""},{"path":"https://serotracker.github.io/serotrackr/articles/serotrackr.html","id":"adjust-the-estimates","dir":"Articles","previous_headings":"","what":"3) Adjust the estimates","title":"serotrackr","text":"completed.","code":""},{"path":"https://serotracker.github.io/serotrackr/articles/serotrackr.html","id":"calculate-95-cis","dir":"Articles","previous_headings":"","what":"4) Calculate 95% CIs","title":"serotrackr","text":"completed.","code":""},{"path":"https://serotracker.github.io/serotrackr/articles/serotrackr.html","id":"export-to-excel-for-submission","dir":"Articles","previous_headings":"","what":"5) Export to Excel for submission","title":"serotrackr","text":"save_xlsx() function exports clean data Excel format. fields, mostly metadata, exported document still need filled . first sheet document necessary instructions. done, document ready submitted SeroTracker.com.","code":"# save_xlsx(df_cleaned, path = tempfile())"},{"path":"https://serotracker.github.io/serotrackr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Reza Hosseini. Author, maintainer. SeroTracker. Copyright holder, funder.","code":""},{"path":"https://serotracker.github.io/serotrackr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hosseini R (2023). serotrackr: Facilitates Submissions SeroTracker. R package version 0.1.0, https://serotracker.github.io/serotrackr/.","code":"@Manual{,   title = {serotrackr: Facilitates Submissions to SeroTracker},   author = {Reza Hosseini},   year = {2023},   note = {R package version 0.1.0},   url = {https://serotracker.github.io/serotrackr/}, }"},{"path":"https://serotracker.github.io/serotrackr/index.html","id":"serotrackr-","dir":"","previous_headings":"","what":"Facilitates Submissions to SeroTracker","title":"Facilitates Submissions to SeroTracker","text":"goal serotrackr facilitate submissions SeroTracker 2.0 website. Access package website vignettes . updated new features added.","code":""},{"path":"https://serotracker.github.io/serotrackr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Facilitates Submissions to SeroTracker","text":"can install development version serotrackr like : PS: logo subject change.","code":"devtools::install_github(\"serotracker/serotrackr\")"},{"path":"https://serotracker.github.io/serotrackr/reference/add_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Add specific attributes to a dataframe — add_attr","title":"Add specific attributes to a dataframe — add_attr","text":"Add specific attributes dataframe","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/add_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add specific attributes to a dataframe — add_attr","text":"","code":"add_attr(data, pathogen, adm0)"},{"path":"https://serotracker.github.io/serotrackr/reference/add_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add specific attributes to a dataframe — add_attr","text":"data dataframe attributes added. pathogen Name pathogen passed attribute name. retrieved assays_df based test_id provided user. adm0 Unique code country passed attribute name. Code based serotrackr::regions object.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/add_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add specific attributes to a dataframe — add_attr","text":"dataframe additional attributes.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/add_attr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add specific attributes to a dataframe — add_attr","text":"id attribute also added using generate_obj_id().","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/add_attr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add specific attributes to a dataframe — add_attr","text":"","code":"df <- add_attr(sample_raw_data, pathogen = \"SARS-CoV-2\",                adm0 = regions$adm0$Canada) attributes(df) #> $class #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\" #>  #> $row.names #>   [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18 #>  [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36 #>  [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54 #>  [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72 #>  [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 #>  [91]  91  92  93  94  95  96  97  98  99 100 #>  #> $names #>  [1] \"dataset_id\"            \"id\"                    \"age_group\"             #>  [4] \"age\"                   \"sex\"                   \"adm0\"                  #>  [7] \"adm1\"                  \"adm2\"                  \"collection_start_date\" #> [10] \"collection_end_date\"   \"test_id\"               \"result\"                #> [13] \"result_cat\"            \"another_col\"           #>  #> $id #> [1] 56542 #>  #> $pathogen #> [1] \"SARS-CoV-2\" #>  #> $adm0 #> [1] \"40\" #>"},{"path":"https://serotracker.github.io/serotrackr/reference/assays.html","id":null,"dir":"Reference","previous_headings":"","what":"Assays list — assays","title":"Assays list — assays","text":"list assays different pathogens. list can used st_validate() function select assays.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assays list — assays","text":"","code":"assays"},{"path":"https://serotracker.github.io/serotrackr/reference/assays.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Assays list — assays","text":"assays nested named list","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assays.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Assays list — assays","text":"Based list assays gathered SeroTracker SARS-CoV-2","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assays list — assays","text":"","code":"assays$`SARS-CoV-2`$`EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG` #> [1] \"EUROIMMUN - IgG - Anti-SARS-CoV-2 ELISA IgG\""},{"path":"https://serotracker.github.io/serotrackr/reference/assays_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Assays data — assays_df","title":"Assays data — assays_df","text":"Assay data different pathogens.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assays_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assays data — assays_df","text":"","code":"assays_df"},{"path":"https://serotracker.github.io/serotrackr/reference/assays_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Assays data — assays_df","text":"assays_df data frame 309 rows 16 columns: pathogen Pathogen; currently SARS-CoV-2 available test_id Unique descriptive ID test test_name Test name isotype Isotype test_type Test type antibody_target Antibody target rdt_test RDT test: boolean variable manufacturer Manufacturer multiplex_detection Multiplex detection: boolean variable spike_antibody_target Spike antibody target manufacturer_sensitivity Manufacturer sensitivity manufacturer_specificity Manufacturer specificity unique_identifier Unique identifier info_page_url Info page URL quantitative_qualitative Quantitative /qualitative who_doherty_find_verified Doherty find verified","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assays_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Assays data — assays_df","text":"Based list assays gathered SeroTracker SARS-CoV-2","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assert.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert a logical expression — assert","title":"Assert a logical expression — assert","text":"Assert logical expression","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert a logical expression — assert","text":"","code":"assert(expr, err_msg)"},{"path":"https://serotracker.github.io/serotrackr/reference/assert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert a logical expression — assert","text":"expr logical expression check err_msg Error message expr FALSE","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assert a logical expression — assert","text":"expr FALSE, stops execution returns err_msg.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/assert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assert a logical expression — assert","text":"","code":"f <- function(data) {   assert(\"data.frame\" %in% class(data),          \"Data must be of class 'data.frame'.\") } f(sample_raw_data)"},{"path":"https://serotracker.github.io/serotrackr/reference/generate_obj_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate object ID — generate_obj_id","title":"Generate object ID — generate_obj_id","text":"Generate object ID","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/generate_obj_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate object ID — generate_obj_id","text":"","code":"generate_obj_id(digits)"},{"path":"https://serotracker.github.io/serotrackr/reference/generate_obj_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate object ID — generate_obj_id","text":"digits Number digits generated random ID.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/generate_obj_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate object ID — generate_obj_id","text":"random number","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/generate_obj_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate object ID — generate_obj_id","text":"","code":"set.seed(4567) generate_obj_id(5) #> [1] 32321"},{"path":"https://serotracker.github.io/serotrackr/reference/msg_colNotFound.html","id":null,"dir":"Reference","previous_headings":"","what":"Message when a column was not found — msg_colNotFound","title":"Message when a column was not found — msg_colNotFound","text":"wrapper around msg_result(). used inside another function.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_colNotFound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Message when a column was not found — msg_colNotFound","text":"","code":"msg_colNotFound(arg, data_name, col_name, ...)"},{"path":"https://serotracker.github.io/serotrackr/reference/msg_colNotFound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message when a column was not found — msg_colNotFound","text":"arg Preset column name argument validation run. data_name Name raw data object supplied user. Can supplied using deparse(substitute(data)) col_name Column name supplied user arg. Can supplied using deparse(substitute(argument)). ... Additional argument passed msg_result().","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_colNotFound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Message when a column was not found — msg_colNotFound","text":"Prints message console.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Print message as progress step — msg_progress","title":"Print message as progress step — msg_progress","text":"Print message progress step","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print message as progress step — msg_progress","text":"","code":"msg_progress(msg)"},{"path":"https://serotracker.github.io/serotrackr/reference/msg_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print message as progress step — msg_progress","text":"msg string scalar.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print message as progress step — msg_progress","text":"message console.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print message as progress step — msg_progress","text":"","code":"msg_progress(\"age_group\") #> ℹ age_group ..."},{"path":"https://serotracker.github.io/serotrackr/reference/msg_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Style and print a message — msg_result","title":"Style and print a message — msg_result","text":"Style print message","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style and print a message — msg_result","text":"","code":"msg_result(arg, msg, error = TRUE, start_time = NULL)"},{"path":"https://serotracker.github.io/serotrackr/reference/msg_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style and print a message — msg_result","text":"arg Column name argument message belongs. section highlighted green red, based error argument. msg character vector body massage(s) /printed arg. section dimmed error set FALSE. error TRUE (default), message starts red cross symbol arg highlighted red. FALSE, message starts green tick symbol arg highlighted green. start_time POSIXct object used add code execution time end printed message.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style and print a message — msg_result","text":"styled message. length msg 1, message broken bullet points.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Style and print a message — msg_result","text":"","code":"timestamp <- Sys.time() msg_result(\"age_group\", \"is a valid column.\", error = FALSE,            start_time = timestamp) #>  #> ✔ age_group is a valid column. [2ms]"},{"path":"https://serotracker.github.io/serotrackr/reference/msg_wrongType.html","id":null,"dir":"Reference","previous_headings":"","what":"Message when supplied type is wrong — msg_wrongType","title":"Message when supplied type is wrong — msg_wrongType","text":"Message supplied type wrong","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_wrongType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Message when supplied type is wrong — msg_wrongType","text":"","code":"msg_wrongType(   arg,   req_type = c(\"char\", \"num\", \"date_char\"),   mode = c(\"col\", \"val\", \"no_typeof\"),   name = NULL,   data = NULL,   ... )"},{"path":"https://serotracker.github.io/serotrackr/reference/msg_wrongType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message when supplied type is wrong — msg_wrongType","text":"arg Preset column name argument validation run. req_type Type expected arg. mode Defines validation done column (col) single value scalar (val). determine current wrong type supplied column vector evaluated. no_typeof option need message print type supplied input. name modes col val. column name, supplied deparse(substitute(argument)) input value substitute(argument). data dataframe. mode col. ... Additional argument passed msg_result().","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_wrongType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Message when supplied type is wrong — msg_wrongType","text":"Prints message console.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/msg_wrongType.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Message when supplied type is wrong — msg_wrongType","text":"","code":"msg_wrongType(\"age\", req_type = \"num\", mode = \"no_typeof\") #>  #> ✖ age must be an unquoted name of a numeric column or a number scalar."},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Regions list — regions","title":"Regions list — regions","text":"nested named list regions three administrative (ADM) levels. list can used adm1() adm2() functions rename geographic areas based SeroTracker's predefined list region names. help automate generation visualizations analyses.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regions list — regions","text":"","code":"regions"},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regions list — regions","text":"regions list. element list returns unique ID.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regions list — regions","text":"Based CGAZ dataset geoBoundaries: https://github.com/wmgeolab/geoBoundaries/tree/main/releaseData/CGAZ","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regions list — regions","text":"adm0: Use level select study's country. adm1: Use level select study's state/province. adm2: Use level select study's district/municipality equivalent division.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regions list — regions","text":"","code":"regions$adm2$Canada$Alberta$Calgary #> [1] \"76498100B36899265297983\""},{"path":"https://serotracker.github.io/serotrackr/reference/regions_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Regions data — regions_df","title":"Regions data — regions_df","text":"Regions data three administrative levels","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regions data — regions_df","text":"","code":"regions_df"},{"path":"https://serotracker.github.io/serotrackr/reference/regions_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regions data — regions_df","text":"regions_df data frame 53087 rows 6 columns: shapeGroup ISO 3166 code country shapeType Aministrative (ADM) level region. ADM0: country; ADM1: state/province; ADM2: district/municipality/equivalent NAME_0 Country name region NAME_1 State/province name region NAME_2 District/municipality/ equivalent name region shapeID_v5 Unique ID region administartive level","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/regions_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regions data — regions_df","text":"Based CGAZ dataset geoBoundaries: https://github.com/wmgeolab/geoBoundaries/tree/main/releaseData/CGAZ","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/sample_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample raw data — sample_raw_data","title":"Sample raw data — sample_raw_data","text":"Example dataset showcase package's expectations raw dataset package's workflow make raw data ready submission SeroTracker 2.0.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/sample_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample raw data — sample_raw_data","text":"","code":"sample_raw_data"},{"path":"https://serotracker.github.io/serotrackr/reference/sample_raw_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample raw data — sample_raw_data","text":"sample_raw_data data frame 100 rows 14 columns: dataset_id ID collection period id Anonimized ID participant sample age_group Age group age Age sex Sex adm0 Administative level 0 (country) region names adm1 Administative level 1 (state/province) region names adm2 Administative level 2 (district/municipalities) region names collection_start_date Collection start date collection_end_date Collection end date test_id Test ID result Test results result_cat Interpretation test results; e.g. positive, negative, borderline another_col Representing columns raw data might contain","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/sample_raw_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample raw data — sample_raw_data","text":"Fictitious data","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/save_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Save as xlsx — save_xlsx","title":"Save as xlsx — save_xlsx","text":"Save xlsx","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/save_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save as xlsx — save_xlsx","text":"","code":"save_xlsx(data, path)"},{"path":"https://serotracker.github.io/serotrackr/reference/save_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save as xlsx — save_xlsx","text":"data validated data.frame, output st_validate() path save xlsx file","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/save_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save as xlsx — save_xlsx","text":"Saves data.fram disk","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/save_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save as xlsx — save_xlsx","text":"","code":"validated_df <- st_validate(   sample_raw_data,   dataset_id = dataset_id,   id = id,   age_group = \"12-17\",   sex = \"m\",   adm0 = regions$adm0$Canada,   adm1 = regions$adm1$Canada$Alberta,   adm2 = regions$adm2$Canada$Alberta$Calgary,   collection_start_date = \"2023-01-01\",   collection_end_date = \"2023-02-01\",   test_id = assays$`SARS-CoV-2`$`AAZ LMB - IgG, IgM - COVID-PRESTO®`,   result = result,   result_cat = \"negative\",   include_others = TRUE ) #>  #> ── Mapping columns and validating data ───────────────────────────────────────── #> ℹ age_group ... #> ✔ age_group is a valid string. [396ms] #> ℹ sex ... #> ✔ sex is a valid string. [78ms] #> ℹ adm0 ... #> ✔ adm0 is a valid string. [86ms] #> ℹ adm1 ... #> ✔ adm1 is a valid string. [8ms] #> ℹ adm2 ... #> ✔ adm2 is a valid string. [12ms] #> ℹ collection_start_date ... #> ✔ collection_start_date is a valid scalar. [152ms] #> ℹ collection_end_date ... #> ✔ collection_end_date is a valid scalar. [18ms] #> ℹ test_id ... #> ✔ test_id is a valid string. [7ms] #> ℹ result ... #> ✔ result is a valid column. [12ms] #> ℹ result_cat ... #> ✔ result_cat is a valid string. [15ms] #> ℹ dataset_id ... #> ✔ dataset_id is a valid column. [3ms] #> ℹ id ... #> ✔ id is a valid column. [10ms] #>  #> ── Validation finished ───────────────────────────────────────────────────────── #> Success! Validated data created. #>   save_xlsx(validated_df, path = tempdir())"},{"path":"https://serotracker.github.io/serotrackr/reference/serotrackr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"serotrackr: Facilitates Submissions to SeroTracker — serotrackr-package","title":"serotrackr: Facilitates Submissions to SeroTracker — serotrackr-package","text":"serotrackr package specifically developed help users prepare raw data submission SeroTracker platform. happens several steps represented one function ; 1) mapping columns raw data required submission, 2) cleaning raw data, 3) generating aggregate estimayes, 4) adjusting estimates, 5) exporting final data xlsx file remaining fields can filled user submission SeroTracker.com.","code":""},{"path":[]},{"path":"https://serotracker.github.io/serotrackr/reference/serotrackr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"serotrackr: Facilitates Submissions to SeroTracker — serotrackr-package","text":"Maintainer: Reza Hosseini rezahs@alum.ubc.ca (ORCID) contributors: SeroTracker [copyright holder, funder]","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/st_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate individual level data — st_validate","title":"Validate individual level data — st_validate","text":"Locates required optional columns data validates .","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/st_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate individual level data — st_validate","text":"","code":"st_validate(   data,   dataset_id,   id,   adm0,   adm1 = NULL,   adm2 = NULL,   collection_start_date,   collection_end_date,   test_id,   result,   result_cat = NULL,   age_group = NULL,   age = NULL,   sex = NULL,   include_others = TRUE )"},{"path":"https://serotracker.github.io/serotrackr/reference/st_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate individual level data — st_validate","text":"data data.frame. dataset_id unquoted column name length-one vector differentiates data collection event(s). id column anonymized individual level IDs. column used generate aggregate estimates. adm0, adm1, adm2 string unquoted name character column contains country (adm0), state/province (adm1), district/municipality (adm2) codes. Use serotrackr::regions select . one adm0 acceptable. adm1 adm2 can . collection_start_date, collection_end_date Unquoted name date character column date string scalar (vector length one) sampling start end dates. lubridate::parse_date_time2() used parse dates. yyyy-mm-dd dd-mm-yyyy structures acceptable. recognize arbitrary non-digit separators well separator. Month Can entered digit full abbreviated name. test_id string unquoted name character column contains test IDs. Use serotrackr::assays select . result Unquoted name numeric column containing test results. result_cat Unquoted name character column values positive, borderline, negative, ignoring case. single string also acceptable. age_group Unquoted name character column string containing age group(s). structures acceptable number-number number+. E.g. 18-64, 65+. age Unquoted name numeric column single number. Acceptable values 0 120 inclusive. sex Unquoted name character column string. Acceptable values : f, m, o, female, male, ignoring case. include_others include additional columns ","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/st_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate individual level data — st_validate","text":"validated data.frame","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/st_validate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate individual level data — st_validate","text":"","code":"st_validate(sample_raw_data,             dataset_id = dataset_id,             id = id,             age_group = \"12-17\",             sex = \"m\",             adm0 = regions$adm0$Canada,             adm1 = regions$adm1$Canada$Alberta,             adm2 = regions$adm2$Canada$Alberta$Calgary,             collection_start_date = \"2023-01-01\",             collection_end_date = \"2023-02-01\",             test_id = assays$`SARS-CoV-2`$`AAZ LMB - IgG, IgM - COVID-PRESTO®`,             result = result,             result_cat = \"negative\",             include_others = TRUE) #> ── Mapping columns and validating data ───────────────────────────────────────── #> ℹ age_group ... #> ✔ age_group is a valid string. [18ms] #> ℹ sex ... #> ✔ sex is a valid string. [9ms] #> ℹ adm0 ... #> ✔ adm0 is a valid string. [7ms] #> ℹ adm1 ... #> ✔ adm1 is a valid string. [7ms] #> ℹ adm2 ... #> ✔ adm2 is a valid string. [10ms] #> ℹ collection_start_date ... #> ✔ collection_start_date is a valid scalar. [10ms] #> ℹ collection_end_date ... #> ✔ collection_end_date is a valid scalar. [16ms] #> ℹ test_id ... #> ✔ test_id is a valid string. [5ms] #> ℹ result ... #> ✔ result is a valid column. [8ms] #> ℹ result_cat ... #> ✔ result_cat is a valid string. [6ms] #> ℹ dataset_id ... #> ✔ dataset_id is a valid column. [3ms] #> ℹ id ... #> ✔ id is a valid column. [10ms] #>  #> ── Validation finished ───────────────────────────────────────────────────────── #> Success! Validated data created. #>  #> # A tibble: 100 × 12 #>    dataset_id    id age_group sex   adm1             adm2  collection_start_date #>         <dbl> <dbl> <chr>     <chr> <chr>            <chr> <date>                #>  1          1     1 12-17     Male  4576071B9681799… 7649… 2023-01-01            #>  2          1     2 12-17     Male  4576071B9681799… 7649… 2023-01-01            #>  3          1     3 12-17     Male  4576071B9681799… 7649… 2023-01-01            #>  4          1    28 12-17     Male  4576071B9681799… 7649… 2023-01-01            #>  5          2    33 12-17     Male  4576071B9681799… 7649… 2023-01-01            #>  6          2    65 12-17     Male  4576071B9681799… 7649… 2023-01-01            #>  7          2    47 12-17     Male  4576071B9681799… 7649… 2023-01-01            #>  8          2    44 12-17     Male  4576071B9681799… 7649… 2023-01-01            #>  9          1    58 12-17     Male  4576071B9681799… 7649… 2023-01-01            #> 10          1    24 12-17     Male  4576071B9681799… 7649… 2023-01-01            #> # ℹ 90 more rows #> # ℹ 5 more variables: collection_end_date <date>, test_id <chr>, result <dbl>, #> #   result_cat <chr>, another_col <chr>"},{"path":"https://serotracker.github.io/serotrackr/reference/validate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate using predefined rules — validate_data","title":"Validate using predefined rules — validate_data","text":"Validate using predefined rules","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/validate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate using predefined rules — validate_data","text":"","code":"validate_data(   data,   rules,   mode = c(\"col\", \"val\"),   col_to_validate = names(data),   rules_msgCut = NULL )"},{"path":"https://serotracker.github.io/serotrackr/reference/validate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate using predefined rules — validate_data","text":"data dataframe whose colnames exactly specified rules rules validator object validate package mode Defines validation done column (col) single value scalar (val). Th latter shorter error messages. col_to_validate Column target validation. Specify validation target column requires columns data; e.g asses end date start date. rules_msgCut character vector rule names last part returned message trimmed; e.g. rule .infinite().","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/validate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate using predefined rules — validate_data","text":"character vector error messages based rules applied. errors occur, vector length zero returned.","code":""},{"path":"https://serotracker.github.io/serotrackr/reference/validate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate using predefined rules — validate_data","text":"","code":"err_msgs <- validate_data(sample_raw_data, rules[\"sex_presetVal\"],                           mode = \"col\", col_to_validate = \"sex\") err_msgs #> [1] \"must only be one of these values, ignoring case: `{.emph f}`, `{.emph m}`, `{.emph o}`, `{.emph female}`, `{.emph male}`, or `{.emph other}`. \\033[34m29\\033[39m records have this issue. Invalid values  are \\033[34m\\\"queer\\\"\\033[39m and \\033[34m\\\"LGBTQ\\\"\\033[39m.\""},{"path":"https://serotracker.github.io/serotrackr/news/index.html","id":"serotrackr-development-version","dir":"Changelog","previous_headings":"","what":"serotrackr (development version)","title":"serotrackr (development version)","text":"st_validate() replaced map_cols(). Naming functions consistent, trying avoid namespace conflicts. new function accepts columns single values, checks required input types (character, numeric, date), applies several validation rules argument, generates descriptive messages console parts data okay parts issues. Added validation rules internal object. rules used several stages check data. Added website using pkgdown. Added logo README.md file. used pkgdown website .","code":""},{"path":"https://serotracker.github.io/serotrackr/news/index.html","id":"serotrackr-010","dir":"Changelog","previous_headings":"","what":"serotrackr 0.1.0","title":"serotrackr 0.1.0","text":"Initial release Added map_cols() function mapping columns Added clean() function cleaning validating data Added save_xlsx() function exporting data standard Excel template Assays regions organized two nested named lists, users can take advantage RStudio search assays regions dropdown-like behaviour Added documention current functions data objects Added sample data showcase raw data expected package handles Added package lifecycle information","code":""}]
